<?php
/**
 * MetadataApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Arta Public API
 *
 * The Arta Public API provides quote generation, transport booking, and tracking capabilities. Additionally the API enables Arta partner organizations to configure email and webhook notifications for their accounts.
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: hello@arta.io
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * MetadataApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class MetadataApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for metadalocationAccessRestrictions
     *
     * Location Access Restrictions.
     *
     */
    public function testMetadalocationAccessRestrictions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for metadataApiVersions
     *
     * API Versions.
     *
     */
    public function testMetadataApiVersions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for metadataCurrencies
     *
     * Currencies.
     *
     */
    public function testMetadataCurrencies()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for metadataEmailNotifications
     *
     * Email Notifications.
     *
     */
    public function testMetadataEmailNotifications()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for metadataInsurances
     *
     * Insurance.
     *
     */
    public function testMetadataInsurances()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for metadataObjectMaterials
     *
     * Object Materials.
     *
     */
    public function testMetadataObjectMaterials()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for metadataObjects
     *
     * Object Types.
     *
     */
    public function testMetadataObjects()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for metadataPackageStatuses
     *
     * Package Statuses.
     *
     */
    public function testMetadataPackageStatuses()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for metadataPackings
     *
     * Packing Types.
     *
     */
    public function testMetadataPackings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for metadataParcelTransportServices
     *
     * Parcel Transport Services.
     *
     */
    public function testMetadataParcelTransportServices()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for metadataPaymentProcessTypes
     *
     * Payment Process types.
     *
     */
    public function testMetadataPaymentProcessTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for metadataQuotes
     *
     * Quote Types.
     *
     */
    public function testMetadataQuotes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for metadataRequestStatuses
     *
     * Quote Request Statuses.
     *
     */
    public function testMetadataRequestStatuses()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for metadataServices
     *
     * Services.
     *
     */
    public function testMetadataServices()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for metadataShipmentExceptionTypes
     *
     * Shipment Exception Types.
     *
     */
    public function testMetadataShipmentExceptionTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for metadataShipmentStatuses
     *
     * Shipment Statuses.
     *
     */
    public function testMetadataShipmentStatuses()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
